name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: 1qaz2wsx
        options: >-
          --health-cmd="mongo --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

  test:
    runs-on: ubuntu-latest
    needs: build  # 這一行確保測試在 build 完成後執行
    services:
      backend:
        build: ./backend
        ports:
          - 5001:5001
        env:
          MONGO_URI: mongodb://root:1qaz2wsx@mongo:27017/clockdb?authSource=admin
          ALLOWED_ORIGINS: http://nginx
        volumes:
          - /etc/localtime:/etc/localtime:ro

      control-backend:
        build: ./control-backend
        ports:
          - 5002:5002
        env:
          MONGO_URI: mongodb://root:1qaz2wsx@mongo:27017/clockdb?authSource=admin
          ALLOWED_ORIGINS: http://nginx

      nginx:
        image: nginx:latest
        ports:
          - 80:80
        volumes:
          - ./nginx:/etc/nginx
          - ./frontend:/usr/share/nginx/html
          - ./nginx/log:/var/log/nginx
          - /etc/localtime:/etc/localtime:ro
        depends_on:
          - backend
          - control-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and run containers
        run: docker-compose up --build -d

      - name: Run tests
        run: |
          docker-compose exec backend npm test
          docker-compose exec control-backend npm test

      - name: Stop and remove containers
        run: docker-compose down

volumes:
  mongodb_data:
